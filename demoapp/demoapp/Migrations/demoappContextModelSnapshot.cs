// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using demoapp.Data;

namespace demoapp.Migrations
{
    [DbContext(typeof(demoappContext))]
    partial class demoappContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:Collation", "Vietnamese_Vietnam.1258")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("demoapp.Data.Exerciseequipment", b =>
                {
                    b.Property<int>("Idm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idm")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("note");

                    b.Property<int?>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("Idm")
                        .HasName("exerciseequipment_pkey");

                    b.ToTable("exerciseequipment");
                });

            modelBuilder.Entity("demoapp.Data.Invoice", b =>
                {
                    b.Property<int>("Idhd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idhd")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Idhd")
                        .HasName("invoice_pkey");

                    b.HasIndex("UserId");

                    b.ToTable("invoice");
                });

            modelBuilder.Entity("demoapp.Data.Invoicedetail", b =>
                {
                    b.Property<int>("Idch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idch")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("integer")
                        .HasColumnName("invoice_id");

                    b.Property<int?>("PackageId")
                        .HasColumnType("integer")
                        .HasColumnName("package_id");

                    b.HasKey("Idch")
                        .HasName("invoicedetail_pkey");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("PackageId");

                    b.ToTable("invoicedetail");
                });

            modelBuilder.Entity("demoapp.Data.Membercard", b =>
                {
                    b.Property<int>("Idt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idt")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("PackageId")
                        .HasColumnType("integer")
                        .HasColumnName("package_id");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime?>("Timeend")
                        .HasColumnType("date")
                        .HasColumnName("timeend");

                    b.Property<DateTime?>("Timestart")
                        .HasColumnType("date")
                        .HasColumnName("timestart");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Idt")
                        .HasName("membercard_pkey");

                    b.HasIndex("PackageId");

                    b.HasIndex("UserId");

                    b.ToTable("membercard");
                });

            modelBuilder.Entity("demoapp.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address");

                    b.Property<int?>("Age")
                        .HasColumnType("integer")
                        .HasColumnName("age");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<bool?>("Gender")
                        .HasColumnType("boolean")
                        .HasColumnName("gender");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("phone");

                    b.Property<int?>("Point")
                        .HasColumnType("integer")
                        .HasColumnName("point");

                    b.Property<string>("Role")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("role");

                    b.Property<int?>("Salary")
                        .HasColumnType("integer")
                        .HasColumnName("salary");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("demoapp.Data.Workoutpackage", b =>
                {
                    b.Property<int>("Idg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idg")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int?>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<DateTime?>("Timeend")
                        .HasColumnType("date")
                        .HasColumnName("timeend");

                    b.Property<DateTime?>("Timestart")
                        .HasColumnType("date")
                        .HasColumnName("timestart");

                    b.HasKey("Idg")
                        .HasName("workoutpackage_pkey");

                    b.ToTable("workoutpackage");
                });

            modelBuilder.Entity("demoapp.Data.Invoice", b =>
                {
                    b.HasOne("demoapp.Data.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .HasConstraintName("invoice_user_id_fkey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("demoapp.Data.Invoicedetail", b =>
                {
                    b.HasOne("demoapp.Data.Invoice", "Invoice")
                        .WithMany("Invoicedetails")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("invoicedetail_invoice_id_fkey");

                    b.HasOne("demoapp.Data.Workoutpackage", "Package")
                        .WithMany("Invoicedetails")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("invoicedetail_package_id_fkey");

                    b.Navigation("Invoice");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("demoapp.Data.Membercard", b =>
                {
                    b.HasOne("demoapp.Data.Workoutpackage", "Package")
                        .WithMany("Membercards")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("membercard_package_id_fkey");

                    b.HasOne("demoapp.Data.User", "User")
                        .WithMany("Membercards")
                        .HasForeignKey("UserId")
                        .HasConstraintName("membercard_user_id_fkey");

                    b.Navigation("Package");

                    b.Navigation("User");
                });

            modelBuilder.Entity("demoapp.Data.Invoice", b =>
                {
                    b.Navigation("Invoicedetails");
                });

            modelBuilder.Entity("demoapp.Data.User", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Membercards");
                });

            modelBuilder.Entity("demoapp.Data.Workoutpackage", b =>
                {
                    b.Navigation("Invoicedetails");

                    b.Navigation("Membercards");
                });
#pragma warning restore 612, 618
        }
    }
}
